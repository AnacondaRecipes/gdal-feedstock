{% set version = "3.6.2" %}

package:
  name: gdal-split
  version: {{ version }}

source:
  url: https://download.osgeo.org/gdal/{{ version }}/gdal-{{ version }}.tar.xz
  sha256: 35f40d2e08061b342513cdcddc2b997b3814ef8254514f0ef1e8bc7aa56cf681
  patches:
    - patches/0001-FindSPATIALITE.patch
    # Fix build error with libxml2 2.12. Fixed in gdal v3.9.0,
    # see https://github.com/OSGeo/gdal/issues/8746
    - patches/cbed9fc91dffba30d0f9a6a06a412a04d9cd36fa.patch
    - patches/ec33f6d6dfe944f59dc5454d01b4d000d9479c02.patch

build:
  number: 6
  # never be built on s390x
  skip: True  # [linux and s390x]
  skip: True  # [py<36]
  skip_compile_pyc:
    - "share/bash-completion/completions/*.py"

requirements:
  build:
    - cmake
    - pkg-config >=0.21      # [not win]
    - make                   # [not win]
    - ninja                  # [win]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - sysroot_linux-64 2.17  # [linux64]
    - patch                  # [unix]
    - m2-patch               # [win]
  host:
    - blosc
    - cfitsio
    - expat {{ expat }}
    - freexl
    - geos {{ geos }}
    - geotiff
    - giflib {{ giflib }}  # [not win]
    - hdf4 {{ hdf4 }}
    - hdf5 {{ hdf5 }}
    - jpeg {{ jpeg }}
    - json-c   # [not win]
    - kealib
    - lerc
    - libcurl {{ libcurl }}
    - libdeflate 1.17
    - libiconv
    - libkml
    - libnetcdf {{ libnetcdf }}
    - libpng {{ libpng }}
    - libpq 12.15
    - libspatialite
    - libtiff {{ libtiff }}
    - libuuid  # [linux]
    - libwebp-base
    - libxml2 {{ libxml2 }}
    - lz4-c
    - openjpeg {{ openjpeg }}
    - openssl {{ openssl }}
    - pcre2
    - poppler 22.12.0
    - proj {{ proj }}
    # qhull disabled because of https://github.com/conda-forge/qgis-feedstock/issues/284#issuecomment-1356490896
    # - qhull
    - sqlite {{ sqlite }}
    - swig
    - tiledb 2.3.3
    - xerces-c
    - xz {{ xz }}
    - zlib {{ zlib }}
    - zstd {{ zstd }}

outputs:
  - name: libgdal
    script: install_lib.sh  # [unix]
    script: install_lib.bat  # [win]
    build:
      run_exports:
        # no idea, going with minor pin
        - {{ pin_subpackage('libgdal', max_pin='x.x') }}

    requirements:
      build:
        - cmake
        # ranlib used at install time
        - {{ compiler('c') }}
        - binutils               # [linux]
        # libstdc++ is needed in requirements/run
        - {{ compiler('cxx') }}
        - pkg-config             # [not win]
        - make                   # [unix]
        - ninja                  # [win]
        - sysroot_linux-64 2.17  # [linux and x86_64]

      host:
        - blosc
        - cfitsio
        - expat {{ expat }}
        - freexl
        - geos {{ geos }}
        - geotiff
        - giflib {{ giflib }}   # [not win]
        - hdf4 {{ hdf4 }}
        - hdf5 {{ hdf5 }}
        - jpeg {{ jpeg }}
        - json-c   # [not win]
        - kealib
        - lerc
        - libcurl {{ libcurl }}
        - libdeflate 1.17
        - libiconv
        - libkml
        - libnetcdf {{ libnetcdf }}
        - libpng {{ libpng }}
        - libpq 12.15
        - libspatialite
        - libtiff {{ libtiff }}
        - libuuid  # [linux]
        - libwebp-base
        - libxml2 {{ libxml2 }}
        - lz4-c
        - openjpeg {{ openjpeg }}
        - openssl {{ openssl }}
        - pcre2
        - poppler 22.12.0
        - proj {{ proj }}
        # qhull disabled because of https://github.com/conda-forge/qgis-feedstock/issues/284#issuecomment-1356490896
        # - qhull
        - sqlite {{ sqlite }}
        - tiledb 2.3.3
        - xerces-c
        - xz {{ xz }}
        - zlib {{ zlib }}
        - zstd {{ zstd }}

      run:
        - cfitsio
        - geotiff
        - giflib   # [not win]
        - json-c   # [not win]
        - libiconv
        - libkml
        - libpq
        - libspatialite
        - libuuid  # [linux]
        - libwebp-base
        - libxml2
        - openjpeg
        - proj
        - qhull
        - tiledb
        - xz
        - zstd
        - openssl  # exact pin handled through openssl run_exports
        - {{ pin_compatible('poppler', max_pin='x.x.x') }}

    test:
      files:
        - test_data
        - run_test.bat
        - run_test.sh

    about:
      summary: The Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_family: MIT
      license_file: LICENSE.TXT

  - name: libgdal-arrow-parquet
    script: build_arrow_parquet.sh  # [unix]
    script: build_arrow_parquet.bat  # [win]
    build:
      # only for libarrow > 10
      skip: True  # [arrow_cpp != "10.0.1"]

    requirements:
      build:
        - cmake
        # ranlib used at install time
        - {{ compiler('c') }}
        - binutils               # [linux]
        # libstdc++ is needed in requirements/run
        - {{ compiler('cxx') }}
        - pkg-config             # [not win]
        - make  # [unix]
        - ninja  # [win]
        - sysroot_linux-64 2.17  # [linux and x86_64]

      host:
        - {{ pin_subpackage('libgdal', max_pin='x.x.x', exact=True) }}
        - blosc
        - cfitsio
        - curl
        - expat {{ expat }}
        - freexl
        - geos {{ geos }}
        - geotiff
        - giflib {{ giflib }}   # [not win]
        - hdf4 {{ hdf4 }}
        - hdf5 {{ hdf5 }}
        - jpeg {{ jpeg }}
        - json-c   # [not win]
        - kealib
        - arrow-cpp
        - libkml
        - libnetcdf {{ libnetcdf }}
        - libpng {{ libpng }}
        - libpq
        - libspatialite
        - libtiff {{ libtiff }}
        - libuuid  # [linux]
        - libwebp-base
        - libxml2 {{ libxml2 }}
        - openjpeg {{ openjpeg }}
        - openssl {{ openssl }}
        - pcre2
        - poppler
        - postgresql
        - proj {{ proj }}
        - qhull
        - sqlite {{ sqlite }}
        - tiledb
        - xerces-c
        - xz {{ xz }}
        - zlib {{ zlib }}
        - zstd {{ zstd }}

      run:
        - {{ pin_subpackage('libgdal', max_pin='x.x.x', exact=True) }}
        - cfitsio
        - geotiff
        - giflib   # [not win]
        - json-c   # [not win]
        - libpq
        - libspatialite
        - libuuid  # [linux]
        - libwebp-base
        - poppler
        - proj
        - tiledb
        - xz
        - zstd
        - openssl  # exact pin handled through openssl run_exports

    test:
      files:
        - test_arrow_parquet.sh   # [unix]
        - test_arrow_parquet.bat  # [win]
      commands:
        - sh test_arrow_parquet.sh   # [unix]
        - test_arrow_parquet.bat  # [win]

    about:
      summary: Arrow and Parquet drivers for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_family: MIT
      license_file: LICENSE.TXT

  - name: gdal
    script: install_python.sh  # [unix]
    script: install_python.bat  # [win]
    build:
      ignore_run_exports:
        # Ignoring the run export since we use openssl in the host section
        # as a means to produce the right variants only. We don't need the dependency
        # since it's already on libcurl.
        - openssl
      skip_compile_pyc:
        - share/bash-completion/completions/*.py

    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - make   # [unix]
        - ninja  # [win]

      host:
        - python
        - pip
        - setuptools
        - wheel
        - numpy
        - openssl {{openssl }}  # Only required to produce all openssl variants.
        - {{ pin_subpackage('libgdal', max_pin='x.x.x', exact=True) }}
        # Without this, the solver is having a hard time resolving the correct dependencies...
        - openjpeg {{ openjpeg }}
      run:
        - python
        - {{ pin_compatible('numpy') }}
        - {{ pin_subpackage('libgdal', max_pin='x.x.x', exact=True) }}

    test:
      files:
        - test_data
        - extra_tests.py
        - run_test.py
      imports:
        - osgeo
        - osgeo.ogr
        - osgeo.gdal
        - osgeo._gdal
        - osgeo._gdalconst
        - osgeo._ogr
        - osgeo._osr
      commands:
        - python run_test.py

      about:
        summary: Python wrapper for the Geospatial Data Abstraction Library (GDAL)
        license: MIT
        license_family: MIT
        license_file: LICENSE.TXT

about:
  home: https://gdal.org
  license: MIT
  license_family: MIT
  license_file: LICENSE.TXT
  summary: The Geospatial Data Abstraction Library (GDAL)
  description: |
    GDAL is a translator library for raster and vector geospatial data formats that is released under an
    X/MIT style Open Source license by the Open Source Geospatial Foundation.
  dev_url: https://github.com/OSGeo/gdal
  doc_url: https://gdal.org/tutorials/index.html

extra:
  recipe-maintainers:
    - zklaus
    - akrherz
    - gillins
    - katietz
    - kmuehlbauer
    - mingwandroid
    - msarahan
    - ocefpaf
    - xylar
